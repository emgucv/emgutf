<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    
    <SupportedOSPlatformVersion>21</SupportedOSPlatformVersion>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>
  <PropertyGroup>
    <TfBinaryDir>$([System.IO.Path]::GetFullPath($(MSBuildThisFileDirectory)..\..\..\..\lib))</TfBinaryDir>
  </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>$(TfBinaryDir)\Build\$(AssemblyName)\$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>portable</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>$(TfBinaryDir)\Build\$(AssemblyName)\$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>$(TfBinaryDir)\Build\$(AssemblyName)\$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
    <PlatformTarget>x86</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <DebugType>portable</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>$(TfBinaryDir)\Build\$(AssemblyName)\$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
    <PlatformTarget>x86</PlatformTarget>
  </PropertyGroup>
    <PropertyGroup>
	
    <EmguTfLinkTarget>MAUI Android Library</EmguTfLinkTarget>
    <!-- 
		<EmguTfNativeArmeabi>$(TfBinaryDir)\android\armeabi\libcvextern.so</EmguTfNativeArmeabi>
        <EmguTfBuildAndroidArmeabi Condition="$(AndroidSupportedAbis.Contains('armeabi%3')) OR $(AndroidSupportedAbis.Contains('armeabi,')) OR $(AndroidSupportedAbis.Contains('armeabi;')) OR $(AndroidSupportedAbis.EndsWith('armeabi')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='armeabi')">True</EmguTfBuildAndroidArmeabi>
        <EmguTfMauiAndroidErrorMessage Condition="'$(EmguTfBuildAndroidArmeabi)'=='True' AND !Exists('$(EmguTfNativeArmeabi)')">This package do not contain necessary binary for $(EmguTfLinkTarget). Emgu CV for Android Commercial License is required. Armeabi is targeted, but file $(EmguTfNativeArmeabi) is missing.</EmguTfMauiAndroidErrorMessage>
        <EmguTfMauiAndroidDeployMessage Condition="'$(EmguTfBuildAndroidArmeabi)'=='True' AND Exists('$(EmguTfNativeArmeabi)')">$(EmguTfMauiAndroidDeployMessage)armeabi </EmguTfMauiAndroidDeployMessage>
		-->
    <EmguTfNativeArmeabiv7a>$(TfBinaryDir)\android\armeabi-v7a\libtfextern.so</EmguTfNativeArmeabiv7a>
    <EmguTfBuildAndroidArmeabiv7a Condition="$(AndroidSupportedAbis.Contains('armeabi-v7a%3')) OR $(AndroidSupportedAbis.Contains('armeabi-v7a,')) OR $(AndroidSupportedAbis.Contains('armeabi-v7a;')) OR $(AndroidSupportedAbis.EndsWith('armeabi-v7a')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='armeabi-v7a')">True</EmguTfBuildAndroidArmeabiv7a>
    <EmguTfMauiAndroidErrorMessage Condition="'$(EmguTfBuildAndroidArmeabiv7a)'=='True' AND !Exists('$(EmguTfNativeArmeabiv7a)')">This package do not contain necessary binary for $(EmguTfLinkTarget). Emgu TF for Android Commercial License is required. Armeabi-v7a is targeted, but file $(EmguTfNativeArmeabiv7a) is missing.</EmguTfMauiAndroidErrorMessage>
    <EmguTfMauiAndroidDeployMessage Condition="'$(EmguTfBuildAndroidArmeabiv7a)'=='True' AND Exists('$(EmguTfNativeArmeabiv7a)')">$(EmguTfMauiAndroidDeployMessage)armeabi-v7a </EmguTfMauiAndroidDeployMessage>
    <EmguTfNativeArm64v8a>$(TfBinaryDir)\android\arm64-v8a\libtfextern.so</EmguTfNativeArm64v8a>
    <EmguTfBuildAndroidArm64v8a Condition="$(AndroidSupportedAbis.Contains('arm64-v8a%3')) OR $(AndroidSupportedAbis.Contains('arm64-v8a,')) OR $(AndroidSupportedAbis.EndsWith('arm64-v8a;')) OR $(AndroidSupportedAbis.EndsWith('arm64-v8a')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU')  OR ('$(Platform)'=='arm64-v8a')">True</EmguTfBuildAndroidArm64v8a>
    <EmguTfMauiAndroidErrorMessage Condition="'$(EmguTfBuildAndroidArm64v8a)'=='True' AND !Exists('$(EmguTfNativeArm64v8a)')">This package do not contain necessary binary for $(EmguTfLinkTarget). Emgu TF for Android Commercial License is required. Arm64-v8a is targeted, but file $(EmguTfNativeArm64v8a) is missing.</EmguTfMauiAndroidErrorMessage>
    <EmguTfMauiAndroidDeployMessage Condition="'$(EmguTfBuildAndroidArm64v8a)'=='True' AND Exists('$(EmguTfNativeArm64v8a)')">$(EmguTfMauiAndroidDeployMessage)arm64-v8a </EmguTfMauiAndroidDeployMessage>
    <EmguTfNativex86>$(TfBinaryDir)\android\x86\libtfextern.so</EmguTfNativex86>
    <EmguTfBuildAndroidx86 Condition="$(AndroidSupportedAbis.Contains('x86%3')) OR $(AndroidSupportedAbis.Contains('x86,')) OR $(AndroidSupportedAbis.Contains('x86;')) OR $(AndroidSupportedAbis.EndsWith('x86')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='x86')">True</EmguTfBuildAndroidx86>
    <EmguTfMauiAndroidErrorMessage Condition="'$(EmguTfBuildAndroidx86)'=='True' AND !Exists('$(EmguTfNativex86)')">This package do not contain necessary binary for $(EmguTfLinkTarget). Emgu TF for Android Commercial License is required. x86 is targeted, but file $(EmguTfNativex86) is missing.</EmguTfMauiAndroidErrorMessage>
    <EmguTfMauiAndroidDeployMessage Condition="'$(EmguTfBuildAndroidx86)'=='True' AND Exists('$(EmguTfNativex86)')">$(EmguTfMauiAndroidDeployMessage)x86 </EmguTfMauiAndroidDeployMessage>
    <EmguTfNativex8664>$(TfBinaryDir)\android\x86_64\libtfextern.so</EmguTfNativex8664>
    <EmguTfBuildAndroidx8664 Condition="$(AndroidSupportedAbis.Contains('x86_64%3')) OR $(AndroidSupportedAbis.Contains('x86_64,')) OR $(AndroidSupportedAbis.Contains('x86_64;')) OR $(AndroidSupportedAbis.EndsWith('x86_64')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='x86_64')">True</EmguTfBuildAndroidx8664>
    <EmguTfMauiAndroidErrorMessage Condition="'$(EmguTfBuildAndroidx8664)'=='True' AND !Exists('$(EmguTfNativex8664)')">This package do not contain necessary binary for $(EmguTfLinkTarget). Emgu TF for Android Commercial License is required. x86_64 is targeted, but file $(EmguTfNativex8664) is missing.</EmguTfMauiAndroidErrorMessage>
    <EmguTfMauiAndroidDeployMessage Condition="'$(EmguTfBuildAndroidx8664)'=='True' AND Exists('$(EmguTfNativex8664)')">$(EmguTfMauiAndroidDeployMessage)x86_64 </EmguTfMauiAndroidDeployMessage>
  </PropertyGroup>
  <!-- armeabi-v7a -->
  <ItemGroup Condition="'$(EmguTfBuildAndroidArmeabiv7a)'=='True' AND Exists('$(EmguTfNativeArmeabiv7a)')">
    <EmbeddedNativeLibrary Include="$(EmguTfNativeArmeabiv7a)">
      <Link>lib\armeabi-v7a\libtfextern.so</Link>
    </EmbeddedNativeLibrary>
  </ItemGroup>
  <!-- arm64-v8a -->
  <ItemGroup Condition="'$(EmguTfBuildAndroidArm64v8a)'=='True' AND Exists('$(EmguTfNativeArm64v8a)')">
    <EmbeddedNativeLibrary Include="$(EmguTfNativeArm64v8a)">
      <Link>lib\arm64-v8a\libtfextern.so</Link>
    </EmbeddedNativeLibrary>
  </ItemGroup>
  <!-- x86 -->
  <ItemGroup Condition="'$(EmguTfBuildAndroidx86)'=='True' AND Exists('$(EmguTfNativex86)')">
    <EmbeddedNativeLibrary Include="$(EmguTfNativex86)">
      <Link>lib\x86\libtfextern.so</Link>
    </EmbeddedNativeLibrary>
  </ItemGroup>
  <!-- x86_64 -->
  <ItemGroup Condition="'$(EmguTfBuildAndroidx8664)'=='True' AND Exists('$(EmguTfNativex8664)')">
    <EmbeddedNativeLibrary Include="$(EmguTfNativex8664)">
      <Link>lib\x86_64\libtfextern.so</Link>
    </EmbeddedNativeLibrary>
  </ItemGroup>
    <ItemGroup>
    <Compile Include="$(MSBuildThisFileDirectory)\..\..\Android\*.cs" />
  </ItemGroup>
    <ItemGroup>
      <ProjectReference Include="..\..\..\..\Emgu.TF\NetStandard\Emgu.TF.csproj" />
    </ItemGroup>
  <Target Name="EmguTfMauiAndroidPackageBuildImports" BeforeTargets="PrepareForBuild">
    <Warning Text="'$(EmguTfMauiAndroidErrorMessage)'" Condition="'$(EmguTfMauiAndroidErrorMessage)'!=''" />
    <Message Text="Emgu TF MAUI Android Compiling with $(EmguTfMauiAndroidDeployMessage)binary" Condition="'$(EmguTfMauiAndroidDeployMessage)'!=''" Importance="High" />
    <Message Text="Native binary is NOT deployed by the project." Condition="'$(EmguTfMauiAndroidDeployMessage)'==''" Importance="High" />
  </Target>

</Project>