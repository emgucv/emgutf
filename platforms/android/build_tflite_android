#!/bin/bash

extra_flags=
if [ \( -n "$1" \) ]; then
    if [ "$1" = "x86" ]; then
	arch="x86"
	extra_flags="--define=xnn_enable_avxvnni=false --define=xnn_enable_avx512amx=false --define=xnn_enable_avx512fp16=false"
    elif [ "$1" = "x86_64" ]; then
	arch="x86_64"
	extra_flags="--define=xnn_enable_avxvnni=false --define=xnn_enable_avx512amx=false --define=xnn_enable_avx512fp16=false"
    elif [ "$1" = "arm" ]; then
	arch="armeabi-v7a"
	extra_flags="--define=xnn_enable_arm_i8mm=false"
    elif [ "$1" = "arm64" ]; then
	arch="arm64-v8a"
	extra_flags="--define=xnn_enable_arm_i8mm=false"
    fi
    echo "Building with config android_$1 for $arch architecture"
else
    echo "Please specify the android config and architecture to build. e.g. $0 x86; $0 x86_64; $0 arm; $0 arm64;"
    exit 1
fi

cd "$(dirname "$0")"
OUTPUT_USER_ROOT=$PWD/bazel_output_lite_$1
cd ../..
cd tensorflow
set -x
bazel --output_user_root=$OUTPUT_USER_ROOT \
      build -c opt \
      --config=android_$1 \
      --copt=-fPIC --cxxopt=-fPIC \
      --linkopt=-fuse-ld=lld \
      --define xnn_enable_assembly=false \
      --copt=-DXNN_ENABLE_ARM_DOTPROD=0 \
      --copt=-DXNN_ENABLE_ARM_I8MM=0 \
      --action_env ANDROID_NDK_HOME=/usr/lib/android-sdk/ndk/21.4.7075529 \
      --action_env ANDROID_NDK_API_LEVEL=28 \
      --action_env ANDROID_SDK_API_LEVEL=23 \
      --action_env ANDROID_SDK_HOME=/usr/lib/android-sdk \
      --verbose_failures $extra_flags\
      //tensorflow/tfliteextern:libtfliteextern.so

pushd $OUTPUT_USER_ROOT
find . -type f -path '*/external/local_config_python/BUILD' \
  -exec sed -i 's/interpreter_path = interpreter/interpreter = interpreter/' {} +
popd

bazel --output_user_root=$OUTPUT_USER_ROOT \
      build -c opt \
      --config=android_$1\
      --copt=-fPIC --cxxopt=-fPIC \
      --linkopt=-fuse-ld=lld \
      --define xnn_enable_assembly=false \
      --copt=-DXNN_ENABLE_ARM_DOTPROD=0 \
      --copt=-DXNN_ENABLE_ARM_I8MM=0 \
      --action_env ANDROID_NDK_HOME=/usr/lib/android-sdk/ndk/21.4.7075529 \
      --action_env ANDROID_NDK_API_LEVEL=28 \
      --action_env ANDROID_SDK_API_LEVEL=23 \
      --action_env ANDROID_SDK_HOME=/usr/lib/android-sdk \
      --verbose_failures $extra_flags\
      //tensorflow/tfliteextern:libtfliteextern.so

#--action_env ANDROID_NDK_HOME=/usr/lib/android-sdk/ndk/25.2.9519653 \
#--action_env ANDROID_BUILD_TOOLS_VERSION=debian \

bazel --version

set +x
#bazel clean
cd ..

mkdir -p lib/android/$arch
cp -rf tensorflow/bazel-bin/tensorflow/tfliteextern/*.so lib/android/$arch
