SET(TENSORFLOW_VERSION_FILE "${TENSORFLOW_SOURCE_DIR}/tensorflow/tf_version.bzl")
file(STRINGS "${TENSORFLOW_VERSION_FILE}" TENSORFLOW_VERSION_PARTS REGEX "TF_VERSION =[ ]+" )

# Extract the quoted version first
string(REGEX MATCH "\"([0-9]+\\.[0-9]+\\.[0-9]+)\"" _ "${TENSORFLOW_VERSION_PARTS}")
set(TENSORFLOW_VERSION "${CMAKE_MATCH_1}")
string(REGEX MATCH "^([0-9]+)\\.([0-9]+)\\.([0-9]+)" _ "${TENSORFLOW_VERSION}")
SET(TENSORFLOW_VERSION_MAJOR "${CMAKE_MATCH_1}")
SET(TENSORFLOW_VERSION_MINOR "${CMAKE_MATCH_2}")
SET(TENSORFLOW_VERSION_PATCH "${CMAKE_MATCH_3}")

#file(STRINGS "${TENSORFLOW_VERSION_FILE}" TENSORFLOW_VERSION_PARTS REGEX "#define TF_VERSION_SUFFIX[ ]+" )
#string(REGEX REPLACE ".+TF_VERSION_SUFFIX[ ]+\"+([-a-z0-9]*)\"+.*" "\\1" TENSORFLOW_VERSION_SUFFIX "${TENSORFLOW_VERSION_PARTS}")
MESSAGE(STATUS "TENSOTFLOW_VERSION_PARTS: '${TENSORFLOW_VERSION_PARTS}' ")
MESSAGE(STATUS "TENSORFLOW_VERSION_MAJOR: '${TENSORFLOW_VERSION_MAJOR}' ")
MESSAGE(STATUS "TENSORFLOW_VERSION_MINOR: '${TENSORFLOW_VERSION_MINOR}' ")
MESSAGE(STATUS "TENSORFLOW_VERSION_PATCH: '${TENSORFLOW_VERSION_PATCH}' ")
MESSAGE(STATUS "TENSOTFLOW_VERSION_SUFFIX: '${TENSORFLOW_VERSION_SUFFIX}' ")

#set(TENSORFLOW_VERSION "${TENSORFLOW_VERSION_MAJOR}.${TENSORFLOW_VERSION_MINOR}.${TENSORFLOW_VERSION_PATCH}")
MESSAGE(STATUS "TENSOTFLOW_VERSION: '${TENSORFLOW_VERSION}' ")

set(TENSORFLOW_SOVERSION "${TENSORFLOW_VERSION_MAJOR}.${TENSORFLOW_VERSION_MINOR}")
set(TENSORFLOW_LIBVERSION "${TENSORFLOW_VERSION_MAJOR}.${TENSORFLOW_VERSION_MINOR}.${TENSORFLOW_VERSION_PATCH}")

# create a dependency on version file
# we never use output of the following command but cmake will rerun automatically if the version file changes
configure_file("${TENSORFLOW_VERSION_FILE}" "${CMAKE_BINARY_DIR}/junk/version.junk" COPYONLY)
